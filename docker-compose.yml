services:
  gunicorn: &app_c
    build: .
    command: "/bin/bash -c 'chmod +x ./deploy/gunicorn.sh && ./deploy/gunicorn.sh'"
    container_name: gunicorn-stagingserver
    volumes:
      - "./db.sqlite3:/STAGING_APP/db.sqlite3:rw"
      - "./STAGING_DIR:/STAGING_DIR"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/etc/nginx/sites-enabled:/etc/nginx/sites-enabled"
      - "/etc/nginx/sites-available:/etc/nginx/sites-available"
      - "./:/STAGING_APP:rw"      # for easy development, remove during prod
      - ./configs:/STAGING_APP/configs
    environment:
      - DEBUG=0
    depends_on:
      - redis
    expose:
      - 7000
    # ports:
    #   - "127.0.0.1:7000:7000"
    networks:
      - staging-network

  daphne:
    <<: *app_c
    command: "daphne stagingserver.asgi:application -b 0.0.0.0 --port 7001"
    container_name: daphne-stagingserver
    depends_on:
      - gunicorn
    expose:
      - 7001
    # ports:
    #   - "127.0.0.1:7001:7001"
    networks:
      - staging-network

  redis:
    container_name: redis-stagingserver
    image: redis:alpine
    networks:
      - staging-network

  celery:
    build: .
    command: "celery -A stagingserver worker -l info"
    container_name: celery-stagingserver
    volumes:
      - "./db.sqlite3:/STAGING_APP/db.sqlite3:rw"
      - "./STAGING_DIR:/STAGING_DIR"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/etc/nginx/sites-enabled:/etc/nginx/sites-enabled"
      - "/etc/nginx/sites-available:/etc/nginx/sites-available"
      - "./:/STAGING_APP:rw"         # for easy development, remove during prod
      - ./configs:/STAGING_APP/configs
    environment:
      - DEBUG=1
    depends_on:
      - redis
    networks:
      - staging-network

  socat:
    image: alpine/socat
    container_name: socat-stagingserver
    command: "TCP-LISTEN:2375,reuseaddr,fork UNIX-CONNECT:/var/run/docker.sock"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    ports:
      - "127.0.0.1:2375:2375"
    expose:
      - 2375
    networks:
      - staging-network
      
  nginx:
    container_name: nginx-stagingserver
    image: nginx:1.25.2
    depends_on:
      - daphne
      - celery
    ports:
      - "127.0.0.1:9000:80"
    volumes:
      - ./configs:/etc/nginx/conf.d
      - ./assets:/assets
    networks:
      - IRIS
      - staging-network

networks:
  staging-network:
    name: staging-network
  IRIS:
    name: IRIS

volumes:
  configs:
